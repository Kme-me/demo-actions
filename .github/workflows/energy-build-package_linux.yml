name: Energy Build and Package Linux

on:
  workflow_dispatch:
#  push:
#    tags:
#      - 'v*.*.*'

jobs:
  Linux-32:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-20.04 ]
        include:
          - arch: i386
            distro: ubuntu:18.04

    env:
      ENERGY_HOME: "/app/energy/EnergyFramework"
      NSIS_HOME: "/app/energy/nsis"
      Z7Z_HOME: "/app/energy/7za"

    steps:
      - uses: actions/checkout@v4

      - name: Config Base Environment  # 配置基础环境
        run: |
          mkdir $RUNNER_WORKSPACE/app
          mkdir $RUNNER_WORKSPACE/app/install

      - name: Container Build and Package
        uses: uraimo/run-on-arch-action@v2
        id: build
        with:
          arch: none
          distro: none
          base_image: ${{ matrix.arch }}/${{ matrix.distro }} # 因为没有amd架构，所以手动指定基础镜像

          githubToken: ${{ github.token }} # 不需要，但可加快构建速度

          dockerRunArgs: | # 将目录装载为容器中的/app
            --volume "$RUNNER_WORKSPACE:/app"

          shell: /bin/bash # 在容器中运行命令的shell

          install: | #在容器中安装一些依赖项
            apt-get update -q -y
            apt-get install -q -y git wget

          run: | # run 要在容器中运行的命令，复制git文件到挂载的目录中
            pwd
            ls -al /app
            cd /app
            wget "https://golang.google.cn/dl/go1.20.14.linux-386.tar.gz"
            tar -C /app -xzf "go1.20.14.linux-386.tar.gz"
            export PATH=$PATH:/app/go/bin
            go version

      - name: Build and Package END
        run: |
          ls -l $RUNNER_WORKSPACE/app     

      - name: Release Dynamic library # 版本发布上传liblcl二进制
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ../app/install/**

